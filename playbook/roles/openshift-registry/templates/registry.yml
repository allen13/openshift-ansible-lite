apiVersion: v1
kind: List
metadata: {}
items:

- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: null
    name: registry

- apiVersion: v1
  groupNames: null
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: null
    name: registry-registry-role
  roleRef:
    kind: ClusterRole
    name: system:registry
  subjects:
  - kind: ServiceAccount
    name: registry
    namespace: default
  userNames:
  - system:serviceaccount:default:registry

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      docker-registry: default
    name: docker-registry
  spec:
    replicas: 1
    selector:
      docker-registry: default
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          docker-registry: default
      spec:
        nodeSelector:
          dc: {{ openshift_primary_dc }}
        containers:
        - env:
          - name: REGISTRY_HTTP_ADDR
            value: :5000
          - name: REGISTRY_HTTP_NET
            value: tcp
          - name: REGISTRY_HTTP_SECRET
            value: V0POsJBJiyl1xm6xm6QPOotEkfFSGF1nn2UxUe+o36w=
          - name: REGISTRY_CONFIGURATION_PATH
            value: /etc/registry/config.yml
          image: openshift/origin-docker-registry:v{{ openshift_origin_version }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 5
          name: registry
          ports:
          - containerPort: 5000
          readinessProbe:
            httpGet:
              path: /healthz
              port: 5000
              scheme: HTTP
            timeoutSeconds: 5
          resources: {}
          securityContext:
            privileged: false
          volumeMounts:
          - mountPath: /registry
            name: registry-storage
          - mountPath: /etc/secrets
            name: registry-secrets
          - mountPath: /etc/registry
            name: registry-config
        serviceAccount: registry
        serviceAccountName: registry
        volumes:
        - emptyDir: {}
          name: registry-storage
        - name: registry-secrets
          secret:
            secretName: registry-secret
        - name: registry-config
          secret:
            secretName: registry-config
    test: false
    triggers:
    - type: ConfigChange
  status: {}

- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      docker-registry: default
    name: docker-registry
  spec:
    clusterIP: {{ openshift_registry_service_ip }}
    portalIP: {{ openshift_registry_service_ip }}
    ports:
    - name: 5000-tcp
      port: 5000
      targetPort: 5000
    selector:
      docker-registry: default
    sessionAffinity: ClientIP
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: docker-registry-redis
    name: docker-registry-redis
  spec:
    selector:
      name: docker-registry-redis
    ports:
    - name: 6379-tcp
      port: 6379
      targetPort: 6379

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: docker-registry-redis
    labels:
      name: docker-registry-redis
  spec:
    nodeSelector:
      dc: {{ openshift_primary_dc }}
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: { }
    triggers:
    - type: ConfigChange
    replicas: 1
    selector:
      name: docker-registry-redis
    template:
      metadata:
        labels:
          name: docker-registry-redis
      spec:
        volumes:
        - name: redis-storage
          emptyDir: { }
        containers:
        - name: docker-registry-redis
          image: redis:alpine
          command:
          - redis-server
          - --appendonly
          - "yes"
          ports:
          - protocol: TCP
            containerPort: 6379
          resources: { }
          volumeMounts:
          - name: redis-storage
            mountPath: /data
          terminationMessagePath: /dev/termination-log
          imagePullPolicy: IfNotPresent
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: { }

- apiVersion: v1
  kind: Route
  metadata:
    name: docker-registry
    namespace: default
    labels:
      docker-registry: default
  spec:
    to:
      kind: Service
      name: docker-registry
      weight: 100
    port:
      targetPort: 5000-tcp
    tls:
      termination: passthrough

- kind: OAuthClient
  apiVersion: v1
  metadata:
    name: cockpit-oauth-client
    respondWithChallenges: false
  secret: {{ openshift_registry_oauth_secret }}
  redirectURIs:
    - https://registry-console-default.apps.{{ openshift_external_dns_domain }}

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: registry-console
    namespace: default
    labels:
      name: registry-console
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources:
    triggers:
      - type: ConfigChange
    replicas: 1
    test: false
    selector:
      name: registry-console
    template:
      metadata:
        labels:
          name: registry-console
      spec:
        containers:
          -
            name: registry-console
            image: cockpit/kubernetes:latest
            ports:
              -
                containerPort: 9090
                protocol: TCP
            env:
              -
                name: OPENSHIFT_OAUTH_PROVIDER_URL
                value: {{ openshift_master_public_url }}
              -
                name: OPENSHIFT_OAUTH_CLIENT_ID
                value: cockpit-oauth-client
              -
                name: KUBERNETES_INSECURE
                value: 'false'
              -
                name: COCKPIT_KUBE_INSECURE
                value: 'false'
              -
                name: REGISTRY_ONLY
                value: 'true'
              -
                name: REGISTRY_HOST
                value: docker-registry-default.apps.{{ openshift_external_dns_domain }}
            resources:
            livenessProbe:
              httpGet:
                path: /ping
                port: 9090
                scheme: HTTP
              initialDelaySeconds: 10
              timeoutSeconds: 5
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            readinessProbe:
              httpGet:
                path: /ping
                port: 9090
                scheme: HTTP
              timeoutSeconds: 5
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            terminationMessagePath: /dev/termination-log
            imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst

- apiVersion: v1
  kind: Service
  metadata:
    name: registry-console
    namespace: default
    labels:
      name: registry-console
  spec:
    ports:
      -
        name: registry-console
        protocol: TCP
        port: 9000
        targetPort: 9090
    selector:
      name: registry-console
    type: ClusterIP
    sessionAffinity: None

- apiVersion: v1
  kind: Route
  metadata:
    name: registry-console
    namespace: default
  spec:
    to:
      kind: Service
      name: registry-console
      weight: 100
    port:
      targetPort: registry-console
    tls:
      termination: passthrough
