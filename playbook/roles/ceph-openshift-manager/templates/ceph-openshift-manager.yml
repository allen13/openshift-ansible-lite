apiVersion: v1
kind: List
items:

- apiVersion: v1
  kind: Service
  metadata:
    name: ceph-openshift-manager
    namespace: internal
    labels:
      app: ceph-openshift-manager
  spec:
    ports:
      - name: 5000-tcp
        protocol: TCP
        port: 5000
        targetPort: 5000
    selector:
      app: ceph-openshift-manager
      deploymentconfig: ceph-openshift-manager
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Route
  metadata:
    name: ceph-openshift-manager
    namespace: internal
    labels:
      app: ceph-openshift-manager
  spec:
    to:
      kind: Service
      name: ceph-openshift-manager
    port:
      targetPort: 5000-tcp

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ceph-openshift-manager
    namespace: internal
    labels:
      app: ceph-openshift-manager
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {  }
    triggers:
      - type: ConfigChange
    replicas: 1
    selector:
      app: ceph-openshift-manager
      deploymentconfig: ceph-openshift-manager
    template:
      metadata:
        labels:
          app: ceph-openshift-manager
          deploymentconfig: ceph-openshift-manager
      spec:
        volumes:
          - name: ceph-clusters
            secret:
              secretName: ceph-clusters
          - name: ceph-secret-manifest
            secret:
              secretName: ceph-secret-manifest
        containers:
          - name: ceph-openshift-manager
            image: allen13/ceph-openshift-manager
            ports:
              - containerPort: 5000
                protocol: TCP
            resources: {}
            volumeMounts:
              - name: ceph-clusters
                mountPath: /etc/ceph/clusters
              - name: ceph-secret-manifest
                mountPath: /etc/ceph/secret
            imagePullPolicy: Always
        restartPolicy: Always
        securityContext: {}
